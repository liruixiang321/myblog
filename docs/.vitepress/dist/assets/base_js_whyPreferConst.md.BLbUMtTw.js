import{_ as t,c as e,o as s,a4 as o}from"./chunks/framework.zFNrNfme.js";const m=JSON.parse('{"title":"为什么要首选const","description":"","frontmatter":{},"headers":[],"relativePath":"base/js/whyPreferConst.md","filePath":"base/js/whyPreferConst.md"}'),a={name:"base/js/whyPreferConst.md"},r=o('<h1 id="为什么要首选const" tabindex="-1">为什么要首选const <a class="header-anchor" href="#为什么要首选const" aria-label="Permalink to &quot;为什么要首选const&quot;">​</a></h1><p>在let和const之间，建议优先使用const，尤其是在全局环境，不应该设置变量，只应设置常量。</p><p>const优于let有几个原因。</p><p>一个是const可以提醒阅读程序的人，这个变量不应该改变；另一个是const比较符合函数式编程思想，运算不改变值，只是新建值，而且这样也有利于将来的分布式运算；</p><p>最后一个原因是 JavaScript 编译器会对const进行优化，所以多使用const，有利于提高程序的运行效率，也就是说let和const的本质区别，其实是编译器内部的处理不同。有人声称JavaScript引擎可以使代码运行 const 得更快，因为知道变量不会被重新分配。</p><p>参考：</p><ul><li>On let vs const[<a href="https://overreacted.io/on-let-vs-const/" target="_blank" rel="noreferrer">https://overreacted.io/on-let-vs-const/</a>]</li><li>Discuss on Twitter[<a href="https://twitter.com/dan_abramov/status/1208850443197145091" target="_blank" rel="noreferrer">https://twitter.com/dan_abramov/status/1208850443197145091</a>]</li></ul>',7),n=[r];function c(_,i,l,p,h,d){return s(),e("div",null,n)}const u=t(a,[["render",c]]);export{m as __pageData,u as default};
